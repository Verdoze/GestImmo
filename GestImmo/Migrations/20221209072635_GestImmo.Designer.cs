// <auto-generated />
using System;
using GestImmo.Data.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GestImmo.Migrations
{
    [DbContext(typeof(ImmoContext))]
    [Migration("20221209072635_GestImmo")]
    partial class GestImmo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GestImmo.Models.Bien", b =>
                {
                    b.Property<int>("BienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BienId"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomBien")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Surface")
                        .HasColumnType("integer");

                    b.Property<int>("Valeur")
                        .HasColumnType("integer");

                    b.HasKey("BienId");

                    b.ToTable("Bien");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("GestImmo.Models.Contrat", b =>
                {
                    b.Property<int>("ContratId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ContratId"));

                    b.Property<int?>("BienId")
                        .HasColumnType("integer");

                    b.Property<int>("CoutLoyer")
                        .HasColumnType("integer");

                    b.Property<string>("DateDebut")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DateFin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ContratId");

                    b.HasIndex("BienId");

                    b.ToTable("Contrat");
                });

            modelBuilder.Entity("GestImmo.Models.Intervention", b =>
                {
                    b.Property<int>("InterventionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InterventionId"));

                    b.Property<int?>("BienId")
                        .HasColumnType("integer");

                    b.Property<string>("DateIntervention")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Information")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MontantTTC")
                        .HasColumnType("integer");

                    b.HasKey("InterventionId");

                    b.HasIndex("BienId");

                    b.ToTable("Intervention");
                });

            modelBuilder.Entity("GestImmo.Models.Locataire", b =>
                {
                    b.Property<int>("LocataireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LocataireId"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LocataireId");

                    b.ToTable("Locataire");
                });

            modelBuilder.Entity("GestImmo.Models.Prestataire", b =>
                {
                    b.Property<int>("PrestataireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PrestataireId"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RaisonSociale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PrestataireId");

                    b.ToTable("Prestataire");
                });

            modelBuilder.Entity("GestImmo.Models.Pret", b =>
                {
                    b.Property<int>("PretId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PretId"));

                    b.Property<int>("Apport")
                        .HasColumnType("integer");

                    b.Property<string>("Duree")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Montant")
                        .HasColumnType("integer");

                    b.Property<int>("TauxInteret")
                        .HasColumnType("integer");

                    b.HasKey("PretId");

                    b.ToTable("Pret");
                });

            modelBuilder.Entity("GestImmo.Models.Box", b =>
                {
                    b.HasBaseType("GestImmo.Models.Bien");

                    b.Property<int>("BoxId")
                        .HasColumnType("integer");

                    b.ToTable("Box", (string)null);
                });

            modelBuilder.Entity("GestImmo.Models.Logement", b =>
                {
                    b.HasBaseType("GestImmo.Models.Bien");

                    b.Property<int>("Cave")
                        .HasColumnType("integer");

                    b.Property<int>("LogementId")
                        .HasColumnType("integer");

                    b.Property<int>("NbChambre")
                        .HasColumnType("integer");

                    b.Property<int>("NbPiece")
                        .HasColumnType("integer");

                    b.Property<int>("Parking")
                        .HasColumnType("integer");

                    b.ToTable("Logement", (string)null);
                });

            modelBuilder.Entity("GestImmo.Models.Appartement", b =>
                {
                    b.HasBaseType("GestImmo.Models.Logement");

                    b.Property<int>("AppartementId")
                        .HasColumnType("integer");

                    b.Property<string>("Ascenseur")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Chauffage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Etage")
                        .HasColumnType("integer");

                    b.ToTable("Appartement", (string)null);
                });

            modelBuilder.Entity("GestImmo.Models.Maison", b =>
                {
                    b.HasBaseType("GestImmo.Models.Logement");

                    b.Property<int>("MaisonID")
                        .HasColumnType("integer");

                    b.ToTable("Maison", (string)null);
                });

            modelBuilder.Entity("GestImmo.Models.Contrat", b =>
                {
                    b.HasOne("GestImmo.Models.Bien", null)
                        .WithMany("ListeContrat")
                        .HasForeignKey("BienId");
                });

            modelBuilder.Entity("GestImmo.Models.Intervention", b =>
                {
                    b.HasOne("GestImmo.Models.Bien", null)
                        .WithMany("ListeIntervention")
                        .HasForeignKey("BienId");
                });

            modelBuilder.Entity("GestImmo.Models.Box", b =>
                {
                    b.HasOne("GestImmo.Models.Bien", null)
                        .WithOne()
                        .HasForeignKey("GestImmo.Models.Box", "BienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestImmo.Models.Logement", b =>
                {
                    b.HasOne("GestImmo.Models.Bien", null)
                        .WithOne()
                        .HasForeignKey("GestImmo.Models.Logement", "BienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestImmo.Models.Appartement", b =>
                {
                    b.HasOne("GestImmo.Models.Logement", null)
                        .WithOne()
                        .HasForeignKey("GestImmo.Models.Appartement", "BienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestImmo.Models.Maison", b =>
                {
                    b.HasOne("GestImmo.Models.Logement", null)
                        .WithOne()
                        .HasForeignKey("GestImmo.Models.Maison", "BienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestImmo.Models.Bien", b =>
                {
                    b.Navigation("ListeContrat");

                    b.Navigation("ListeIntervention");
                });
#pragma warning restore 612, 618
        }
    }
}
